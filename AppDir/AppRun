#!/bin/sh

set -e
APPDIR="$(cd "${0%/*}" && echo "$PWD")"
BIN="${ARGV0:-$0}"
BIN="${BIN#./}"
unset ARGV0

dependencies="getcap pkexec ln mkdir grep"
for dep in $dependencies; do
	if ! command -v $dep 1>/dev/null; then
		>&2 echo "ERROR: Missing dependency '$dep'"
		notify-send -u critical "ERROR: Missing dependency '$dep'"
		exit 1
	fi
done

# gsr binaries were patched to look for data files in '/tmp/._gsr'
if [ -w /tmp ]; then
	ln -sfn "$APPDIR"/share /tmp/._gsr
else
	>&2 echo "ERROR: We need write access to /tmp to make a symlink"
	notify-send -u critical "ERROR: We need write access to /tmp to make a symlink"
fi

# gsr needs capabilities, so this ugly hack is needed for that
if ! grep -q '/tmp .*nosuid' /proc/mounts; then
	WORKAROUND_PATH="/tmp/.gsr-appimage-hack"
elif [ -w /var/tmp ] && ! grep -qE '/var/tmp .*nosuid|/var .*nosuid' /proc/mounts; then
	WORKAROUND_PATH="/var/tmp/.gsr-appimage-hack"
else
	WORKAROUND_PATH="${XDG_CACHE_HOME:-$HOME/.cache}"/gsr-appimage-hack
fi

mkdir -p "$WORKAROUND_PATH"/bin

# hack to get capabities working
if [ ! -f "$WORKAROUND_PATH"/sharun ]; then
	cp "$APPDIR"/sharun*   "$WORKAROUND_PATH"
	cp "$APPDIR"/.env      "$WORKAROUND_PATH"
	ln -f "$WORKAROUND_PATH"/sharun  "$WORKAROUND_PATH"/bin/gpu-screen-recorder
	ln -f "$WORKAROUND_PATH"/sharun  "$WORKAROUND_PATH"/bin/gpu-screen-recorder-gtk
	ln -f "$WORKAROUND_PATH"/sharun  "$WORKAROUND_PATH"/bin/gsr-dbus-server
	ln -f "$WORKAROUND_PATH"/sharun  "$WORKAROUND_PATH"/bin/gsr-notify
	ln -f "$WORKAROUND_PATH"/sharun  "$WORKAROUND_PATH"/bin/gsr-ui
	ln -f "$WORKAROUND_PATH"/sharun  "$WORKAROUND_PATH"/bin/gsr-cli
	ln -f "$WORKAROUND_PATH"/sharun2 "$WORKAROUND_PATH"/bin/gsr-global-hotkeys
	ln -f "$WORKAROUND_PATH"/sharun3 "$WORKAROUND_PATH"/bin/gsr-kms-server
fi

ln -sfn "$APPDIR"/etc     "$WORKAROUND_PATH"/etc
ln -sfn "$APPDIR"/lib     "$WORKAROUND_PATH"/lib
ln -sfn "$APPDIR"/share   "$WORKAROUND_PATH"/share
ln -sfn "$APPDIR"/shared  "$WORKAROUND_PATH"/shared

if [ -z "$(getcap "$WORKAROUND_PATH"/bin/*)" ]; then
	pkexec sh -c "
		setcap cap_setuid+ep '$WORKAROUND_PATH'/bin/gsr-global-hotkeys
		setcap cap_sys_admin+ep '$WORKAROUND_PATH'/bin/gsr-kms-server
	"
fi

# This doesn't work because this program uses pidof internall, so when ARGV0 is
# gsr-ui the program detects the pidof of the AppImage as the actual binary wtf
#if [ -f ./bin/"$BIN" ]; then
#        exec ./bin/"$BIN" "$@"

if [ -n "$1" ] && [ -f "$WORKAROUND_PATH"/bin/"$1" ]; then
	BIN="$1"
	shift
	exec "$WORKAROUND_PATH"/bin/"$BIN" "$@"
else
	exec "$WORKAROUND_PATH"/bin/gpu-screen-recorder-gtk "$@"
fi
